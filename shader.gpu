// Vertex shader
const vertexShaderSource = `
attribute vec3 vertex;
attribute vec2 textureCoords;
uniform mat4 ProjectionMatrix;
uniform mat4 ModelViewMatrix;
varying vec2 vTextureCoords;

void main() {
    vec4 vertPos4 = ModelViewMatrix * vec4(vertex, 1.0);
    vec3 vertPos = vec3(vertPos4) / vertPos4.w;
    gl_Position = ProjectionMatrix * vertPos4;
    vTextureCoords = textureCoords;
}`;


// Fragment shader
const fragmentShaderSource = `
#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif

varying vec2 vTextureCoords;
uniform sampler2D textureUnit;

void main() {
    vec4 texture = texture2D(textureU, vTextureCoords);
    gl_FragColor = texture;
}`;
